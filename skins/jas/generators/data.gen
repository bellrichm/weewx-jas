##    Copyright (c) 2023 Rich Bell <bellrichm@gmail.com>
##    See the file LICENSE.txt for your rights.

#import time
#from weeutil.weeutil import to_bool, to_list
#set $start_time = time.time()

#set $skin_data_binding = $getVar('$Extras.data_binding', $data_binding)
#set $page_data_binding = $getVar('$Extras.pages.' + $page_definition_name_global + '.data_binding', $skin_data_binding)

/* jas $version $genTime */

## Define the 'aggegate' objects to hold the data
## For example: last7days_min = {}, last7days_max = {}
#for $aggregate_type in $aggregate_types
    #echo $interval_long_name_global + $aggregate_type + " = {};\n"
#end for

minMaxObs = [];
thisDateObsList = [];
var current = {};
var current_observation = null;
var forecasts = [];

#echo "var " + $interval_long_name_global + "startDate;\n"
#echo "var " + $interval_long_name_global + "endDate;\n"
#echo "var " + $interval_long_name_global + "startTimestamp;\n"
#echo "var " + $interval_long_name_global + "endTimestamp;\n"

var updateDate;

#echo "function getData" + $interval_long_name_global + "(pageDataString) {\n"
    pageData = JSON.parse(pageDataString);

#if $getVar("$Extras.display_aeris_observation", False) and 'current' in $getVar("Extras.pages." + $page_definition_name_global)
    #echo "if (pageData.currentObservations) {\n"
    #echo "    current_observation = '';\n"
    #echo "        pageData.currentObservations.forEach(function(observationCode) {\n"
    #echo "            current_observation += getText(observationCode) + ' ';\n"
    #echo "        });\n"
    #echo "    }\n"
#end if

#echo "    forecasts = pageData.forecasts"

#echo "    " + $interval_long_name_global + "startDate = moment(pageData.startDate);\n"
#echo "    " + $interval_long_name_global + "endDate = moment(pageData.endDate);\n"
#echo "    " + $interval_long_name_global + "startTimestamp = pageData.startTimestamp;\n"
#echo "    " + $interval_long_name_global + "endTimestamp = pageData.endTimeStamp;\n"

## Populate the 'aggegate' objects
## Example: last7days_min.outTemp = [[dateTime1, outTemp1], [dateTime2, outTemp2]]
#for aggregate_type in $getVar('$Extras.page_definition.' + $page_definition_name_global + '.aggregate_interval')
    #echo "    var " + $interval_long_name_global + "endTimestamp_" + $aggregate_type + " =  pageData.endTimestamp_" + $aggregate_type + ";\n"
#end for

#for $observation in $observations
    #for $aggregate_type in $observations[$observation]['aggregate_types']
        #set $interval_name = $interval_long_name_global + $aggregate_type
        #for $data_binding in $observations[$observation]['aggregate_types'][$aggregate_type]
            #for $unit_name in $observations[$observation]['aggregate_types'][$aggregate_type][$data_binding]
                #set $name_prefix = $interval_name + "." + $observation + "_"  + $data_binding
                #set $name_prefix2 = $interval_name + "_" + $observation + "_"  + $data_binding
                #if $unit_name == "default"
                    #pass
                #else
                    #set $name_prefix += "_" + $unit_name
                    #set $name_prefix2 += "_" + $unit_name
                #end if
                #set $array_name = $name_prefix
                #set $datetime_name = $name_prefix2 + "_dateTime"
                #set $data_name = $name_prefix2 + "_data"
                #echo "    " + $array_name + ' = pageData.' + $array_name + ';\n'
                ## Cache the dateTimes into its own list variable
                #echo "    " + $datetime_name + " = [].concat(" + $array_name + ".map(arr => arr[0]));\n"
                ## Cache the values into its own list variable
                #echo "    " + $data_name + " = [].concat(" + $array_name + ".map(arr => arr[1]));\n"
            #end for
        #end for
    #end for
    #echo "\n"
#end for

#if 'thisdate' in $getVar('Extras.pages.' + $page)
    #set $thisdate_data_binding = $getVar('$Extras.thisdate.data_binding', $skin_data_binding)
    #for $observation in $getVar('$Extras.thisdate.observations')
        #set $data_binding = $getVar('$Extras.thisdate.observations.' + $observation + '.data_binding', $thisdate_data_binding)
        #set $unit_name = $getVar('$Extras.thisdate.observations.' + $observation + '.unit', 'default')
        #if $unit_name == "default"
            #set $label = $getVar('unit.label.' + $observation);
        #else
            #set $label = $getUnitLabel($unit_name)
        #end if

        #set $aggregation_type = $getVar('$Extras.thisdate.observations.' + $observation + '.type', None)
        #set $max_decimals = $getVar('$Extras.thisdate.observations.' + $observation + '.max_decimals', False)
        #echo "    thisDateObs = [];\n"
        #echo "    maxDecimals = null;\n"
        #if max_decimals
            #echo "    maxDecimals = " + $max_decimals + ";\n"
        #end if

        #if $aggregation_type is None
            #echo '    thisDateObsDetail = {};\n'
            #echo '    thisDateObsDetail.label = "' + label + '";\n'
            #echo '    thisDateObsDetail.maxDecimals = maxDecimals;\n'
            #set $value = $interval_long_name_global + 'min.' + $observation + "_" + data_binding
            #set $id_value = $observation + "_thisdate_min"
            #echo '    thisDateObsDetail.dataArray = ' + value + ';\n'
            #echo '    thisDateObsDetail.id = "' + id_value + '";\n'
            #echo '    thisDateObs.push(thisDateObsDetail);\n'
            #echo '\n'
            #echo '    thisDateObsDetail = {};\n'
            #echo '    thisDateObsDetail.label = "' + label + '";\n'
            #echo '    thisDateObsDetail.maxDecimals = maxDecimals;\n'
            #set $value = $interval_long_name_global + 'max.' + $observation + "_" + $data_binding
            #set $id_value = $observation + "_thisdate_max"
            #echo '    thisDateObsDetail.dataArray = ' + value + ';\n'
            #echo '    thisDateObsDetail.id = "' + id_value + '";\n'
            #echo '    thisDateObs.push(thisDateObsDetail);\n'
            #echo '\n'
        #else
            #echo '    thisDateObsDetail = {};\n'
            #echo '    thisDateObsDetail.label = "' + label + '";\n'
            #echo '    thisDateObsDetail.maxDecimals = maxDecimals;\n'
            #set $value = $interval_long_name_global + $aggregation_type + '.' + $observation + "_" + $data_binding
            #set $id_value = $observation + "_thisdate_" + $aggregation_type
            #echo '    thisDateObsDetail.dataArray = ' + value + ';\n'
            #echo '    thisDateObsDetail.id = "' + id_value + '";\n'
            #echo '    thisDateObs.push(thisDateObsDetail);\n'
        #end if

        #echo '    thisDateObsList.push(thisDateObs);\n'
    #end for
#end if

#if 'minmax' in $getVar('Extras.pages.' + $page)
    #set $minmax_data_binding = $getVar('$Extras.minmax.data_binding', $skin_data_binding)
    #for $observation in $getVar('$Extras.minmax.observations')
        #set $data_binding = $getVar('$Extras.minmax.observations.' + $observation + '.data_binding', $minmax_data_binding)
        #set $unit_name = $getVar('$Extras.minmax.observations.' + $observation + '.unit', 'default')
        #set $min_name_prefix = $interval_long_name_global + "min_" + $observation + "_" + data_binding
        #set $max_name_prefix = $interval_long_name_global + "max_" + $observation + "_" + data_binding

        #if $unit_name != "default"
            #set $min_name_prefix += "_" + $unit_name
            #set $max_name_prefix += "_" + $unit_name
            #set $label = $getUnitLabel($unit_name)
        #else
            #set $label = $getVar('unit.label.' + $observation);
        #end if

        #echo '    minMaxObsData = {};\n'
        #echo '    minMaxObsData.minDateTimeArray = ' + $min_name_prefix + '_dateTime;\n'
        #echo '    minMaxObsData.minDataArray = ' +  $min_name_prefix + '_data;\n'
        #echo '    minMaxObsData.maxDateTimeArray = ' + $max_name_prefix + '_dateTime;\n'
        #echo '    minMaxObsData.maxDataArray = ' +  $max_name_prefix + '_data;\n'
        #echo '    minMaxObsData.label = "' + $label + '";\n'
        #echo '    minMaxObsData.minId =  "' + $observation + '_minmax_min";\n'
        #echo '    minMaxObsData.maxId = "' + $observation + '_minmax_max";\n'
        #echo '    minMaxObsData.maxDecimals = ' + $getVar('$Extras.minmax.observations.' + $observation + '.max_decimals', 'null') +';\n'
        #echo '    minMaxObs.push(minMaxObsData);\n'
    #end for
#end if

## Create the data used to display current conditions.
## This data is only used when MQTT is not enabled.
## This data is stored in a javascript object named 'current'.
## 'current.header' is an object with the data for the header portion of this section.
## 'current.observations' is a map. The key is the observation name, like 'outTemp'. The value is the data to populate the section.
#if 'current' in $getVar('Extras.pages.' + $page)
    #echo '    var mqtt_enabled = false;\n'
    #echo '    updateDate = pageData.updateDate;\n'

    #if 'observation' in $getVar('Extras.current')
        #echo '    current.header = {};\n'
        #echo '    current.header.name = "' + $getVar('Extras.current.observation') +'";\n'

        #set $header_max_decimals = $getVar('Extras.current.header_max_decimals', False)
        #if $header_max_decimals
            #echo '    current.header.value = Number(pageData.currentHeaderValue).toFixed(' + header_max_decimals + ');\n'
        #else
            #echo '    current.header.value = Number(pageData.currentHeaderValue);\n'
        #end if

        #echo '    if (!isNaN(current.header.value)) {\n'
        #echo '        current.header.value = Number(current.header.value).toLocaleString(lang);\n'
        #echo '    }\n'
        #echo '    current.header.unit = "' + $getVar('unit.label.' + $getVar('Extras.current.observation')) + '";\n'
    #end if

    #echo '    current.observations = new Map();\n'
    #echo '    currentData = JSON.parse(pageData.currentData);\n'

    #for $observation in $getVar('$Extras.current.observations')
        #set $type_value = $getVar('$Extras.current.observations.' + $observation + '.type', '')
        #set $unit_name = $getVar('$Extras.current.observations.' + $observation + '.unit', 'default')
        #set $max_decimals = $getVar('$Extras.current.observations.' + $observation + '.max_decimals', False)

        #if $unit_name != "default"
            #set $observation_unit = $getUnitLabel($unit_name)
        #else
            #set $observation_unit = $getVar('unit.label.' + $observation)
        #end if

        #if type_value == 'rise'
            ## todo this is a place holder and needs work
            ##set observation_value = '"' + str($getattr($almanac, $observation + 'rise')) + '";'
            #set $observation_unit = " "
            ##label = 'foo'
        #end if

        #echo '    var observation = {};\n'
        #echo '    observation.name = "' + observation + '";\n'
        #echo '    observation.mqtt = ' + $getVar('$Extras.current.observations.' + $observation + '.mqtt', 'true').lower() + ';\n'
        #echo '    observation.value = currentData.' + observation + ';\n'
        #echo '    if (!isNaN(observation.value)) {\n'
        #if $max_decimals
            #echo '        observation.value = Number(observation.value).toFixed(' + $max_decimals + ');\n'
        #end if        
        #echo '        observation.value = Number(observation.value).toLocaleString(lang);\n'
        #echo '    }\n'
        #echo '    observation.unit = "' + $observation_unit + '";\n'
        #echo '    observation.maxDecimals = ' + $getVar('$Extras.current.observations.' + $observation + '.max_decimals', 'null') + ';\n'
        #echo '    observation.modalLabel = null;\n'
        #if 'modal' in to_list($getVar('$Extras.current.observations.' + $observation + '.display', ['page', 'modal']))
            #echo '    observation.modalLabel = observation.name + "_value_modal";\n'
        #end if
        #echo '    current.observations.set("' + observation + '", observation);\n'
    #end for
#end if

## Create an array of mqtt observations in charts
#echo '    mqttData2 = {};\n'
#echo '    mqttData = {};\n'

#set $page_series_type = $getVar('$Extras.page_definition.series_type', 'single')
#for $chart in $getVar('$Extras.chart_definitions')
    #if $chart in $getVar('$Extras.pages.' + $page)
        #set $chart_series_type = $getVar('$Extras.pages.' + $page + '.' + chart + '.series_type', $page_series_type)
        #if $chart_series_type == 'mqtt'
            #for $observation in $getVar('$Extras.chart_definitions.' + chart + '.series')
                ##echo "    mqttData2['" + observation + "'] = {};\n"
                #echo "    mqttData2['" + observation + "'] = [];\n"
                #echo "    mqttData." + observation + "= [];\n"
            #end for
        #end if
    #end if
#end for

## ToDo: optimize - only do if page uses MQTT
#if $getVar('$Extras.mqtt', False)
    #echo "    topics = new Map();\n"
    #for $topic in $getVar('$Extras.mqtt.topics', [])
        #echo "    topics.set('" + topic + "', new Map());\n"
        #for $field in $getVar('$Extras.mqtt.topics.' + $topic + '.fields', [])
            #set $fieldname = $getVar('$Extras.mqtt.topics.' + $topic + '.fields.' + $field + '.name')
            #echo "    topics.get('" + $topic + "').set('" + $fieldname + "', '" + $field + "');\n"
        #end for
    #end for
#end if

#if $getVar('$Extras.pages.' + $page_definition_name_global + '.windRose', None) is not None
    #for $series in $getVar('$Extras.chart_definitions.windRose.series')
        #echo "    " + $interval_long_name_global + "avg."  + $series + "_" + $page_data_binding + " = JSON.parse(pageData." + $interval_long_name_global + "avg."  + $series + "_" + $page_data_binding + ");\n"
    #end for
#end if

#echo "}\n"

#set elapsed_time = time.time() - $start_time
#set log_msg = "Generated " + $HTML_ROOT + "/" + $filename + " in " + str($elapsed_time)
#if to_bool($getVar("$Extras.log_times", True))
  $logdbg($log_msg)
#end if