##    Copyright (c) 2021-2022 Rich Bell <bellrichm@gmail.com>
##    See the file LICENSE.txt for your rights.

#import time
#set $start_time = time.time()
## Create time stamps by aggregation time for the end of interval
## For example: endTimestamp_min, endTimestamp_max

#for $aggregate_type in $getVar('Extras.page_definition.' + $page_definition_name_global + '.aggregate_interval')
    #set aggregate_interval = $getVar('Extras.page_definition.' + $page_definition_name_global + '.aggregate_interval.' + $aggregate_type)
    ## The 'start' and 'end' tags ignore/do not use the '$data_binding' on the 'time period'.
    ## This makes sense because a DB call is not needed.
    ## ToDo - verify: Either reading code or ask.
    #if $aggregate_interval == 'day'
        #set source = "#set global $endTimestamp = ((($" + $interval_name_global + ".end.raw // 86400) * 86400)  - ($utcOffset * 60)) * 1000;\n"
        ##set source = "#set global $endTimestamp = ((($" + $interval_name_global + "($data_binding='wx_binding').end.raw // 86400) * 86400)  - ($utcOffset * 60)) * 1000;\n"
        #set $source += "var " + $interval_long_name_global + "endTimestamp_" + $aggregate_type + " = $" + "endTimestamp;\n"
        #include source=$source
    #else if $aggregate_interval == 'hour'
        #set source = "#set global $endTimestamp = ((($" + $interval_name_global + ".end.raw // 3600) * 3600)  - ($utcOffset * 60)) * 1000;\n"
        ##set source = "#set global $endTimestamp = ((($" + $interval_name_global + "($data_binding='wx_binding').end.raw // 3600) * 3600)  - ($utcOffset * 60)) * 1000;\n"
        #set $source += "var " + $interval_long_name_global + "endTimestamp_" + $aggregate_type + " = $" + "endTimestamp;\n"
        #include source=$source    
    #else
        #set source = "#set global $endTimestamp = ((($" + $interval_name_global + ".end.raw // 60) * 60)  - ($utcOffset * 60)) * 1000;\n"
        ##set source = "#set global $endTimestamp = ((($" + $interval_name_global + "($data_binding='wx_binding').end.raw // 60) * 60)  - ($utcOffset * 60)) * 1000;\n"
        #set $source += "var " + $interval_long_name_global + "endTimestamp_" + $aggregate_type + " = $" + "endTimestamp;\n"
        #include source=$source        
    #end if
#end for

## Define the 'aggegate' objects to hold the data
## For example: last7days_min = {}, last7days_max = {}
#for aggregate_type in $aggregate_types
    #set interval_name = $interval_long_name_global + $aggregate_type
    $interval_name = {};
#end for

## Populate the 'aggegate' objects
## Example: last7days_min.outTemp = [[dateTime1, outTemp1], [dateTime2, outTemp2]]
#for $observation in $observations
    #for aggregate_type in $observations[$observation]['aggregate_types']
        #set aggregate_interval = $getVar('Extras.page_definition.' + $page_definition_name_global + '.aggregate_interval.' + $aggregate_type, None)
        #set interval_name = $interval_long_name_global + $aggregate_type
        #set dateTime_name = $interval_name + "_" + $observation + "_dateTime"
        #for data_binding in $observations[$observation]['aggregate_types'][$aggregate_type]:
            #set array_name = $interval_name + "." + $observation + "_"  + $data_binding
            #set data_name = $interval_name + "_" + $observation + "_"  + $data_binding + "_data"

            #if $aggregate_interval is not None
                #set obs = $array_name + " = $" + $interval_name_global + "($data_binding='" + $data_binding + "')." + $observation + ".series(time_series='start', aggregate_type='" + $aggregate_type + "', aggregate_interval='" + $aggregate_interval + "', time_unit='unix_epoch_ms').round(2).json"
            #else
                #set obs = $array_name + " = $" + $interval_name_global + "($data_binding='" + $data_binding + "')." + $observation + ".series(time_series='start', time_unit='unix_epoch_ms').round(2).json"
            #end if
            $skinDebug($obs)
            #include source=$obs + ";\n"

            ## Cache the dateTimes into its own list variable
            #echo $dateTime_name + " = [].concat(" + $array_name + ".map(arr => arr[0]));\n"
            ## Cache the values into its own list variable
            #echo $data_name + " = [].concat(" + $array_name + ".map(arr => arr[1]));\n"
        #end for
    #end for
#end for

## ToDo - wind rose proof of concept
## Create data for wind rose chart
#if $getVar('Extras.pages.' + $page_definition_name_global + '.windRose',None) is not None
    ## ToDo - wind data_binding?
    #set $data_binding = $getVar('Extras.pages.' + $page_definition_name_global + '.data_binding', $getVar("$Extras.data_binding", 'wx_binding'))
    #set avg, max, wind_directions, wind_range_legend = $windCompass()
    #set line = "var windRangeLegend = " + $wind_range_legend
    $line;
    #set i = 0
    #for $wind in $wind_directions
        #set line = $interval_name_global + "_avg.windCompassRange"  + str($i) + "_" + $data_binding + " = "  + str($wind) +  ";"
        $line
        #set $i += 1
    #end for
#end if

#set elapsed_time = time.time() - $start_time
#set log_msg = "Generated " + $filename + " in " + str($elapsed_time)
##$loginf($log_msg)