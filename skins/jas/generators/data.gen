#errorCatcher Echo
##    Copyright (c) 2021-2023 Rich Bell <bellrichm@gmail.com>
##    See the file LICENSE.txt for your rights.

#import datetime
#import time
#import weeutil
#from weeutil.weeutil import to_bool
#set $start_time = time.time()
##$logdbg("Starting  " + $HTML_ROOT + "/" + $filename)

/* jshint esversion: 6 */
#set $skin_data_binding = $getVar("$Extras.data_binding", $data_binding)
#set global $page_data_binding = $getVar('Extras.pages.' + $page_definition_name_global + '.data_binding', $getVar("$Extras.data_binding", $data_binding))

#set $interval_start_seconds_global = $_get_TimeSpanBinder($interval_name_global, $page_data_binding).start.raw
#set $interval_end_seconds_global = $_get_TimeSpanBinder($interval_name_global, $page_data_binding).end.raw

#*
Create the data used to display current conditions.
This data is only used when MQTT is not enabled.
This data is stored in a javascript object named 'current'.
'current.header' is an object with the data for the header portion of this section.
'current.observations' is a map. The key is the observation name, like 'outTemp'. The value is the data to populate the section.
'current.suffixes is also a map'. Its key is observation_suffix, for example 'outTemp_suffix'.
*#
#if $getVar("$Extras.pages." + $page_definition_name_global + ".current", None) is not None
    #set $current_data_binding = $getVar("$Extras.current.data_binding", $skin_data_binding)
    #set $interval_current = $getVar("$Extras.current.interval", $interval_global)
    var mqtt_enabled = false;
    var updateDate = $current($data_binding=$current_data_binding).dateTime.raw * 1000;
    var current = {};
    #if $getVar('$Extras.current.observation', False)
        current.header = {};
        current.header.name = "$getVar('Extras.current.observation')";
        #set $data_binding = $getVar("$Extras.current.header_data_binding", $current_data_binding)
        current.header.value = $_get_current($getVar('Extras.current.observation'), $data_binding, 'default', False);
        #set header_max_decimals = $getVar('$Extras.current.header_max_decimals', False)
        #if $header_max_decimals
            current.header.value = current.header.value.toFixed($header_max_decimals);
        #end if
        if (!isNaN(current.header.value)) {
            current.header.value = Number(current.header.value).toLocaleString(lang);
        }
        current.header.unit = "$getattr($getattr($unit, 'label'),  $getVar('Extras.current.observation'))"
    #end if
    current.observations = new Map();
    current.suffixes = new Map();

    #for observation in $Extras.current.observations
            #set $data_binding = $getVar("$Extras.current.observations." + $observation + ".data_binding", $current_data_binding)
            #set type = $getVar("$Extras.current.observations" + "." + $observation + ".type", "")
            #set unit_name = $getVar("$Extras.current.observations" + "." + $observation + ".unit", "default")
            #if $unit_name != "default"
                #set unit_conv = "." + $unit_name
                #set observation_unit = $getUnitLabel($unit_name)
            #else
                #set unit_conv = ""
                #set observation_unit = $getattr($unit.label, $observation)
            #end if
            
            #if $type == 'rise'    
                #set observation_value = '"' + str($getattr($almanac, $observation + 'rise')) + '";'
                #set observation_unit = " "
                #set label = 'foo'
            #else if $type == 'sum'
                #set observation_value = $_get_aggregate($observation, $data_binding, $interval_current, $type, $unit_name, False);
            #else
                #set observation_value = $_get_current($observation, $data_binding, $unit_name, False);
            #end if

        var observation = {};
        observation.name = "$observation";
        observation.mqtt = $getVar('$Extras.current.observations.' + $observation + '.mqtt', 'true').lower();
        observation.value = $observation_value
        #set max_decimals = $getVar('$Extras.current.observations.' + $observation + '.max_decimals', False)
        #if max_decimals
            observation.value = observation.value.toFixed($max_decimals);
        #end if
        if (!isNaN(observation.value)) {
            observation.value = Number(observation.value).toLocaleString(lang);
        }
        #set source = '"' + $observation_unit + '";'
        observation.unit = $source
        observation.maxDecimals = $getVar('$Extras.current.observations.' + $observation + '.max_decimals', 'null');
        current.observations.set("$observation", observation);
    #end for
#end if

## Create an array of mqtt observations in charts
mqttData2 = {};
mqttData = {};
#set page_series_type = $getVar('Extras.page_definition.' + $page + '.series_type', 'single')
#for $chart in $getVar('$Extras.chart_definitions')
    #set chart_series_type = $getVar('Extras.pages.' + $page + '.' + chart + '.series_type', $page_series_type)
    #if $chart_series_type == 'mqtt'
        #for $observation in $getVar('$Extras.chart_definitions.' + $chart + '.series')
            mqttData2['$observation'] = {};
            mqttData2['$observation'] = [];
            mqttData.$observation = [];
        #end for
    #end if
#end for  

fieldMap = new Map()
## ToDo: optimize - only do if page uses MQTT
#if $getVar('$Extras.mqtt', False)
    #for $field in $getVar('$Extras.mqtt.fields', [])
        #set $fieldname = $getVar('$Extras.mqtt.fields.' + $field + '.name')
        fieldMap.set('$fieldname', '$field')
    #end for
#end if

## Proof of concept - wind rose
## Create data for wind rose chart
#if $getVar('Extras.pages.' + $page_definition_name_global + '.windRose',None) is not None
    #set avg, max, wind_directions, wind_range_legend = $windCompass(data_binding=$page_data_binding, start_time=$interval_start_seconds_global, end_time=$interval_end_seconds_global)
    #set line = "var windRangeLegend = " + $wind_range_legend
    $line;
    #set i = 0
    #for $wind in $wind_directions
        #set line = $interval_long_name_global + "avg.windCompassRange"  + str($i) + "_" + $data_binding + " = "  + str($wind) +  ";"
        $line
        #set $i += 1
    #end for
#end if

#set elapsed_time = time.time() - $start_time
#set log_msg = "Generated " + $HTML_ROOT + "/" + $filename + " in " + str($elapsed_time)
#if to_bool($getVar("$Extras.log_times", True))
    $logdbg($log_msg)
#end if
