#    Copyright (c) 2021 Rich Bell <bellrichm@gmail.com>
#    See the file LICENSE.txt for your rights.

[Extras]
    #debug = True

    # define the charts
    [[charts]]
        [[[avgMax]]]
            [[[[chart]]]]
                type = "'radar'"
            [[[[stroke]]]]
                show = false
            [[[[fill]]]]
                opacity = 0.0
            [[[[xaxis]]]]
                categories = "$ordinateNames"              
            [[[[series]]]]
                [[[[[windCompassAverage]]]]]
                [[[[[windCompassMaximum]]]]]          
        [[[windRange]]]
            [[[[chart]]]]
                type = "'radar'"
            [[[[stroke]]]]
                show = false
            [[[[fill]]]]
                opacity = 0.0
            [[[[xaxis]]]]
                categories = "$ordinateNames"    
            [[[[series]]]]
                [[[[[windCompassRange0]]]]]
                [[[[[windCompassRange1]]]]]
                [[[[[windCompassRange2]]]]]
                [[[[[windCompassRange3]]]]]
                [[[[[windCompassRange4]]]]]
                [[[[[windCompassRange5]]]]]
                [[[[[windCompassRange6]]]]]
        [[[outTemp]]]
            [[[[chart]]]]
                type = "'line'"
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"
            [[[[series]]]]
                [[[[[outTemp]]]]]
                [[[[[dewpoint]]]]]
        [[[barometer]]]
            [[[[chart]]]]
                type = "'area'"            
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"            
            [[[[series]]]]
                [[[[[barometer]]]]]
        [[[rain]]]
            [[[[chart]]]]
                type = "'bar'"            
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"            
            [[[[series]]]]
                [[[[[rain]]]]]
        [[[wind]]]
            [[[[chart]]]]
                type = "'line'"            
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"    
            [[[[series]]]]
                [[[[[windSpeed]]]]]
                [[[[[windGust]]]]]    
        [[[UV]]]
            [[[[chart]]]]
                type = "'line'"            
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"    
            [[[[series]]]]
                [[[[[UV]]]]]
        [[[radiation]]]
            [[[[chart]]]]
                type = "'line'"            
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"    
            [[[[series]]]]
                [[[[[radiation]]]]]
        [[[outHumidity]]]
            [[[[chart]]]]
                type = "'line'"            
            [[[[dataLabels]]]]
                enabled = false
            [[[[xaxis]]]]
                type = "'datetime'"
                [[[[[labels]]]]]
                    formatter = "function(val, timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['xaxis_label']');}"
            [[[[tooltip]]]]
                [[[[[x]]]]]
                    formatter = "function(timestamp) {return moment.unix(timestamp/1000).utcOffset($utcOffset).format('$gettext[$page]['tooltip_x']');}"    
            [[[[series]]]]
                [[[[[outHumidity]]]]]                
    
    # define the page content and layout
    [[pages]]
        [[[index]]]  

[CheetahGenerator]
    search_list_extensions = user.jas.JAS

    [[SummaryByMonth]]
        [[[archive-month]]]
            template = archive/month%Y%m.html.tmpl
        [[[month_data]]]
            template = archive/data/month%Y%m-data.js.tmpl
        [[[month_charts]]]
            template = archive/charts/month%Y%mcharts.js.tmpl

    [[SummaryByYear]]
        [[[archive-year]]]
            template = archive/year%Y.html.tmpl
        [[[year_data]]]
            template = archive/data/year%Y-data.js.tmpl
        [[[year_charts]]]
            template = archive/charts/year%Ycharts.js.tmpl

    [[index]]
        template = index.html.tmpl
    [[day]]
        template = day.html.tmpl    
    [[week]]
        template = week.html.tmpl
    [[month]]
        template = month.html.tmpl       
    [[year]]
        template = year.html.tmpl                 
    [[yesterday]]
        template = yesterday.html.tmpl
    [[last24hours]]
        template = last24hours.html.tmpl        
    [[last7days]]
        template = last7days.html.tmpl        
    [[last31days]]
        template = last31days.html.tmpl        
    [[last366days]]
        template = last366days.html.tmpl   
    [[indexcharts]]
        template = charts/indexcharts.js.tmpl             
    [[daycharts]]
        template = charts/daycharts.js.tmpl
    [[weekcharts]]
        template = charts/weekcharts.js.tmpl       
    [[monthcharts]]
        template = charts/monthcharts.js.tmpl       
    [[yearcharts]]
        template = charts/yearcharts.js.tmpl    
    [[yesterdaycharts]]                       
        template = charts/yesterdaycharts.js.tmpl
    [[last24hourscharts]]                       
        template = charts/last24hourscharts.js.tmpl        
    [[last7dayscharts]]                       
        template = charts/last7dayscharts.js.tmpl        
    [[last31dayscharts]]                       
        template = charts/last31dayscharts.js.tmpl        
    [[last366dayscharts]]                       
        template = charts/last366dayscharts.js.tmpl        
    [[ToDate]]
        # Reports which show statistics (e.g. day) to date
        [[[day]]]
            # no aggregation, so do not set stale_age
            template = data/day-data.js.tmpl
        [[[week]]]
            # aggregation of week data is hour, so only generate once per hour
            stale_age = 3600
            template = data/week-data.js.tmpl
        [[[month]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/month-data.js.tmpl
        [[[year]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/year-data.js.tmpl
        [[[yesterday]]]
            # only chances once a day, so only generate once per day
            stale_age = 86400
            template = data/yesterday-data.js.tmpl
        [[[last24hours]]]
            template = data/last24hours-data.js.tmpl            
        [[[last7days]]]
            # aggregation of week data is hour, so only generate once per hour
            stale_age = 3600
            template = data/last7days-data.js.tmpl            
        [[[last31days]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/last31days-data.js.tmpl            
        [[[last366days]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/last366days-data.js.tmpl            

# File copy configuration
# -----------------------------------------------------------------------------
#
# This section describes all files which should be copied
#
[CopyGenerator]

    # List of files to be copied only the first time
    copy_once = index.html, *.js, weather-icons/* 

    # List of files to be copied each run (except templates)
    # copy_always =


# Generator configuration
# -----------------------------------------------------------------------------
#
# This section describes all generators mentioned above
#
[Generators]
    generator_list = weewx.cheetahgenerator.CheetahGenerator, weewx.reportengine.CopyGenerator
