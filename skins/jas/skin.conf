#    Copyright (c) 2021-2023 Rich Bell <bellrichm@gmail.com>
#    See the file LICENSE.txt for your rights.

SKIN_NAME = Jas
SKIN_VERSION = 0.3.2-rc01a

[Extras]
    #debug = True
    bootstrap_version = 5.3.0
    bootstrap_icons_version = 1.10.5
    paho_mqtt_version = 1.0.4
    momentjs_version = 2.29.1
    popperjs_core_version = 2.9.2
    date_picker_version = 0.1.3
    echarts_version = 5.3.3

    navbar_collapse = 768

    [[mqtt]]
        enable = false
        host = localhost
        port = 9001
        timeout = 30
        keepAliveInterval = 60
        cleanSession = true
        reconnect = true
        useSSL = false

        topic  = weather/loop

    [[chart_defaults]]
        [[[properties]]]
            [[[[grid]]]]
                [[[[[yAxis]]]]]
                    type = "'value'"
                    name = weewx_unit_label
                    boundaryGap=  "[0, '100%']"
                    min = "function (value) {return Math.floor(value.min);}"
                    max = "function (value) {return Math.ceil(value.max);}"     
                    [[[[[[axisLabel]]]]]]
                         formatter = function (value) {return(value ? value.toLocaleString(lang) : value);}                                            
        [[[global]]]            
            [[[[grid]]]]
                [[[[[title]]]]]
                    left = "'center'"
                [[[[[toolbox]]]]]
                    [[[[[[feature]]]]]]
                        [[[[[[[dataZoom]]]]]]]
                            yAxisIndex = "'none'"
                            [[[[[[[[restore]]]]]]]]
                            [[[[[[[[saveAsImage]]]]]]]] 
                [[[[[legend]]]]]      
                    orient = "'horizontal'"
                    bottom = 0
                    # For now, not scrolling looks better on most charts
                    # type = "'scroll'"           
        [[[chart_type]]]
            [[[[series]]]]
                [[[[[grid]]]]]
                    [[[[[["'line'"]]]]]]
                        smooth = true
                        symbol = "'none'"
        [[[series_type]]]
            [[[[single]]]]
                [[[[[tooltip]]]]]
                    valueFormatter = function (value) {return(value ? Number(value.toFixed(2)).toLocaleString(lang) : value);}
                    trigger = "'axis'"
                    [[[[[[axisPointer]]]]]]
                        [[[[[[[label]]]]]]]
                            formatter = '''
                                function (params) { 
                                    return moment.unix(params.value/1000).utcOffset(utc_offset).format(dateTimeFormat[lang].chart[aggregate_interval].toolTipX);
                                }'''
                [[[[[xAxis]]]]]
                    type = "'time'"
                    boundaryGap = false
                    [[[[[[axisLine]]]]]]
                        onZero = false
                    [[[[[[axisLabel]]]]]]
                        hideOverlap = true
                        formatter = "function (value) { return moment.unix(value/1000).utcOffset(utc_offset).format(dateTimeFormat[lang].chart[aggregate_interval].xAxisLabel); }"                    
            [[[[mqtt]]]]
                [[[[[tooltip]]]]]
                    valueFormatter = function (value) {return(value ? Number(value.toFixed(2)).toLocaleString(lang) : value);}
                    trigger = "'axis'"
                    [[[[[[axisPointer]]]]]]
                        [[[[[[[label]]]]]]]
                            formatter = '''
                                function (params) { 
                                    return moment.unix(params.value/1000).utcOffset(utc_offset).format(dateTimeFormat[lang].chart[aggregate_interval].toolTipX);
                                }'''
                [[[[[xAxis]]]]]
                    type = "'time'"
                    boundaryGap = false
                    [[[[[[axisLine]]]]]]
                        onZero = false
                    [[[[[[axisLabel]]]]]]
                        hideOverlap = true
                        formatter = "function (value) { return moment.unix(value/1000).utcOffset(utc_offset).format(dateTimeFormat[lang].chart[aggregate_interval].xAxisLabel); }"            
            [[[[multiple]]]]
                [[[[[tooltip]]]]]
                    valueFormatter = function (value) {return(value ? Number(value.toFixed(2)).toLocaleString(lang) : value);}
                    trigger = "'axis'"
                    [[[[[[axisPointer]]]]]]
                        [[[[[[[label]]]]]]]
                            formatter = '''
                                function (params) { 
                                    return moment.unix(params.value/1000).utcOffset(utc_offset).format(dateTimeFormat[lang].chart[aggregate_interval].toolTipX);
                                }'''
                [[[[[xAxis]]]]]
                    type = "'time'"
                    boundaryGap = false
                    [[[[[[axisLine]]]]]]
                        onZero = false                 
                    [[[[[[axisLabel]]]]]]
                        hideOverlap = true
                        formatter = "function (value) { return moment.unix(value/1000).utcOffset(utc_offset).format(dateTimeFormat[lang].chart[aggregate_interval].xAxisLabel); }"            
            [[[[comparison]]]]
                [[[[[tooltip]]]]]
                    valueFormatter = function (value) {return(value ? Number(value.toFixed(2)).toLocaleString(lang) : value);}
                    trigger = "'axis'"
                [[[[[xAxis]]]]]
                    type = "'category'"
                    data = monthDays[lang]
                    [[[[[[axisLabel]]]]]]
                        hideOverlap = true
                    [[[[[[axisLine]]]]]]
                        onZero = false                              

    # define the charts
    [[chart_definitions]]
        [[[outTemp]]]
          [[[[series]]]]
              [[[[[outTemp]]]]]
                    z = 100
                [[[[[windchill]]]]]
                [[[[[heatindex]]]]]
        [[[outHumidity]]]
            [[[[series]]]]
                [[[[[dewpoint]]]]]
                    yAxisIndex = 0
                [[[[[outHumidity]]]]]
                    yAxisIndex = 1
                    type = "'scatter'"
                    symbolSize = 5
                [[[[[outTemp]]]]]    
        [[[barometer]]]       
            [[[[series]]]]
                [[[[[barometer]]]]]
                [[[[[[tooltip]]]]]]
                    valueFormatter = function (value) {return(value ? Number(value.toFixed(3)).toLocaleString(lang) : value);}
        [[[rainOnly]]]
            [[[[series]]]]
                [[[[[rain]]]]]
                    type = "'bar'"
                    [[[[[[weewx]]]]]]
                      aggregate_type = sum                 
        [[[rain]]]
            [[[[series]]]]
                [[[[[rainRate]]]]]
                    yAxisIndex = 1
                    [[[[[[weewx]]]]]]
                      aggregate_type = max                    
                [[[[[rain]]]]]
                    yAxisIndex = 0
                    type = "'bar'"
                    [[[[[[weewx]]]]]]
                      aggregate_type = sum                 
        [[[wind]]]
            [[[[series]]]]
                [[[[[windSpeed]]]]]
                    yAxisIndex = 0
                [[[[[windGust]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max           
                [[[[[windDir]]]]]
                    yAxisIndex = 1
                    type = "'scatter'"                                        
        [[[windGustOnly]]]
            [[[[series]]]]
                [[[[[windGust]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max                                           
        [[[ET]]]
            [[[[series]]]]
                [[[[[ET]]]]]
                    type = "'bar'"
                    [[[[[[weewx]]]]]]
                      aggregate_type = sum                 
        [[[UV]]]
            [[[[series]]]]
                [[[[[UV]]]]]
        [[[radiation]]]
            [[[[series]]]]
                [[[[[radiation]]]]]

        [[[outTempMinMax]]]
            [[[[series]]]]
                [[[[[outTempMin]]]]]
                    z = 100
                    [[[[[[weewx]]]]]]
                        observation = outTemp
                        aggregate_type = min
                [[[[[outTempMax]]]]]
                    z = 100
                    [[[[[[weewx]]]]]]
                        observation = outTemp
                        aggregate_type = max     
                [[[[[windchillMin]]]]]
                    [[[[[[weewx]]]]]]
                        observation = windchill
                        aggregate_type = min
                [[[[[heatindexMax]]]]]
                    [[[[[[weewx]]]]]]
                        observation = heatindex
                        aggregate_type = max 
        [[[outHumidityMinMax]]]
            [[[[series]]]]
                [[[[[dewpointMin]]]]]
                    yAxisIndex = 0
                    [[[[[[weewx]]]]]]
                        observation = dewpoint
                        aggregate_type = min 
                [[[[[dewpointMax]]]]]
                    #yAxisIndex = 0
                    [[[[[[weewx]]]]]]
                        observation = dewpoint
                        aggregate_type = max
                [[[[[outHumidityMin]]]]]
                    yAxisIndex = 1
                    type = "'scatter'"
                    symbolSize = 5
                   [[[[[[weewx]]]]]]
                        observation = outHumidity
                        aggregate_type = min
                [[[[[outHumidityMax]]]]]
                    #yAxisIndex = 1
                    type = "'scatter'"
                    symbolSize = 5
                   [[[[[[weewx]]]]]]
                        observation = outHumidity
                        aggregate_type = max                                      

        [[[outTempMax]]]
            [[[[series]]]]
                [[[[[outTemp]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max
        [[[outTempMin]]]
            [[[[series]]]]
                [[[[[outTemp]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = min
        [[[windchillMin]]]
            [[[[series]]]]
                [[[[[windchill]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = min
        [[[heatindexMax]]]
            [[[[series]]]]
                [[[[[heatindex]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max
        [[[dewpointMax]]]
            [[[[series]]]]
                [[[[[dewpoint]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max
        [[[dewpointMin]]]
            [[[[series]]]]
                [[[[[dewpoint]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = min
        [[[outHumidityMax]]]
            [[[[series]]]]
                [[[[[outHumidity]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max
        [[[outHumidityMin]]]
            [[[[series]]]]
                [[[[[outHumidity]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = min


        [[[UVMax]]]
            [[[[series]]]]
                [[[[[UV]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max
        [[[radiationMax]]]
            [[[[series]]]]
                [[[[[radiation]]]]]
                    [[[[[[weewx]]]]]]
                        aggregate_type = max


        [[[windRose]]]
            [[[[tooltip]]]]
                trigger = "'item'"
            [[[[angleAxis]]]]
                type = "'category'"
                data= ordinateNames
                boundaryGap = false
                [[[[[axisTick]]]]]
                    show = false
                [[[[[splitLine]]]]]
                    show = true
                [[[[radiusAxis]]]]
                    show = false
                #    zlevel =  3
                #    min =  0
                #    max = 100
                #    [[[[[axisLabel]]]]]
                #       formatter = "'{value}   %'"
            [[[[polar]]]]
            #[[[[grid]]]]
            [[[[legend]]]]
                data = windRangeLegend
                orient = "'horizontal'"
                bottom = 0
                type = "'scroll'"
            [[[[series]]]]
                [[[[[windCompassRange0]]]]]
                    name = "windRangeLegend[0]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"            
                [[[[[windCompassRange1]]]]]
                    name = "windRangeLegend[1]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"
                [[[[[windCompassRange2]]]]]
                    name = "windRangeLegend[2]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"
                [[[[[windCompassRange3]]]]]
                    name = "windRangeLegend[3]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"
                [[[[[windCompassRange4]]]]]
                    name = "windRangeLegend[4]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"
                [[[[[windCompassRange5]]]]]
                    name = "windRangeLegend[5]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"
                [[[[[windCompassRange6]]]]]
                    name = "windRangeLegend[6]"
                    barCategoryGap = 0
                    type = "'bar'"
                    coordinateSystem = "'polar'"
                    stack = "'a'"                                                                                                    

    [[page_definition]]
        [[[debug]]]
            # simulate day page
            simulate_page = day
            simulate_interval = day
            [[[[aggregate_interval]]]]  
                sum = hour  
        [[[index]]]
            [[[[aggregate_interval]]]]
                ##avg = None
                sum = hour            
        [[[day]]]
            [[[[aggregate_interval]]]]
                ##avg = None
                sum = hour              
        [[[last24hours]]]
            [[[[aggregate_interval]]]]
                ##avg = None
                sum = hour         
        [[[week]]]
            [[[[aggregate_interval]]]]
                avg = hour
                min = hour
                max = hour
                sum = day                 
        [[[last7days]]]
            [[[[aggregate_interval]]]]
                avg = hour
                min = hour
                max = hour
                sum = day
        [[[month]]]
            [[[[aggregate_interval]]]]
                avg = day
                min = day
                max = day                
                sum = day                
        [[[last31days]]]
            [[[[aggregate_interval]]]]
                avg = day
                min = day
                max = day                
                sum = day
        [[[year]]]
            [[[[aggregate_interval]]]]
                avg = day
                min = day
                max = day                            
                #sum = week  
                sum = day                        
        [[[last366days]]]
            [[[[aggregate_interval]]]]
                avg = day
                min = day
                max = day                             
                #sum = week    
                sum = day
        [[[yesterday]]]
            [[[[aggregate_interval]]]]
                ##avg = None
                sum = hour       
        [[[yeartoyear]]]
            series_type = comparison               
        [[[multiyear]]]
            series_type = multiple                                          
        [[[archive-month]]]
            [[[[aggregate_interval]]]]
                avg = day
                min = day
                max = day                
                sum = day
        [[[archive-year]]]                   
            [[[[aggregate_interval]]]]
                avg = day
                min = day
                max = day            
                #sum = week             
                sum = day             

[CheetahGenerator]
    encoding = utf8
    search_list_extensions = user.jas.JAS

        
    [[javascript]]
        generate_once = true 
        [[[mqtt]]]
        template = javascript/mqtt.js.tmpl
        [[[manifest]]]
            template = manifest.json.tmpl
        [[[about]]]
            template = javascript/about.js.tmpl                
        [[[debug]]]
            template = javascript/debug.js.tmpl    
        [[[index]]]
            template = javascript/index.js.tmpl
        [[[day]]]
            template = javascript/day.js.tmpl    
        [[[week]]]
            template = javascript/week.js.tmpl
        [[[month]]]
            template = javascript/month.js.tmpl       
        [[[year]]]
            template = javascript/year.js.tmpl                 
        [[[yesterday]]]
            template = javascript/yesterday.js.tmpl
        [[[last24hours]]]
            template = javascript/last24hours.js.tmpl        
        [[[last7days]]]
            template = javascript/last7days.js.tmpl        
        [[[last31days]]]
            template = javascript/last31days.js.tmpl        
        [[[last366days]]]
            template = javascript/last366days.js.tmpl  
        [[[yeartoyear]]]
            template = javascript/yeartoyear.js.tmpl  
        [[[multiyear]]]
            template = javascript/multiyear.js.tmpl                                
        [[[archive-month]]]
            summarize_by = SummaryByMonth
            template = javascript/%Y-%m.js.tmpl    
        [[[archive-year]]]
            summarize_by = SummaryByYear
            template = javascript/%Y.js.tmpl  

    [[data]]
        # The SummaryByMonth and SummaryByYear must be before index.js.tmpl.
        # This is because the SummaryByMonth and SummaryByYear
        # set the $SummaryByMonth and $SummaryByYear tags.
        # And these tags are used in the index.js.tmpl.
        [[[archive-month]]]
            summarize_by = SummaryByMonth
            template = data/month%Y%m.js.tmpl                 
        [[[archive-year]]]
            summarize_by = SummaryByYear
            template = data/year%Y.js.tmpl    
        [[[internationalization]]]
            template = data/internationalization.js.tmpl                
        [[[index]]]
            # no aggregation, so do not set stale_age
            template = data/index.js.tmpl    
        [[[forecast]]]
            template = data/forecast.js.tmpl
        # Reports which show statistics (e.g. day) to date
        [[[debug]]]
            # Aggregation can change depending on what is debugging, so do not set stale age
            template = data/debug.js.tmpl
        [[[day]]]
            # no aggregation, so do not set stale_age
            template = data/day.js.tmpl
        [[[week]]]
            # aggregation of week data is hour, so only generate once per hour
            stale_age = 3600
            template = data/week.js.tmpl
        [[[month]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/month.js.tmpl
        [[[year]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/year.js.tmpl
        [[[yesterday]]]
            # only chances once a day, so only generate once per day
            stale_age = 86400
            template = data/yesterday.js.tmpl
        [[[last24hours]]]
            template = data/last24hours.js.tmpl            
        [[[last7days]]]
            # aggregation of week data is hour, so only generate once per hour
            stale_age = 3600
            template = data/last7days.js.tmpl            
        [[[last31days]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/last31days.js.tmpl            
        [[[last366days]]]
            # aggregation of week data is hour, so only generate once per day
            stale_age = 86400
            template = data/last366days.js.tmpl       
    
    [[charts]]
        generate_once = true
        [[[debug]]]
            template = charts/debug.js.tmpl                      
        [[[day]]]
            template = charts/day.js.tmpl
        [[[week]]]
            template = charts/week.js.tmpl       
        [[[month]]]
            template = charts/month.js.tmpl       
        [[[year]]]
            template = charts/year.js.tmpl    
        [[[yesterday]]]                     
            template = charts/yesterday.js.tmpl
        [[[last24hours]]]                       
            template = charts/last24hours.js.tmpl        
        [[[last7days]]]                       
            template = charts/last7days.js.tmpl        
        [[[last31days]]]                       
            template = charts/last31days.js.tmpl        
        [[[last366days]]]                       
            template = charts/last366days.js.tmpl
        [[[yeartoyear]]]
            template = charts/yeartoyear.js.tmpl    
        [[[multiyear]]]
            template = charts/multiyear.js.tmpl                              
        [[[archive-month]]]
            summarize_by = SummaryByMonth
            template = charts/%Y-%m.js.tmpl                  
        [[[archive-year]]]
            summarize_by = SummaryByYear
            template = charts/%Y.js.tmpl
        
    [[css]]
        generate_once = true
        [[[jas]]]
            template = jas.css.tmpl            
        [[[user]]]
            template = user.css.tmpl            

    # Generate pages after a prereqs have been generated
    [[html]]
        generate_once = true
        [[[debug]]]
            template = pages/debug.html.tmpl            
        [[[day]]]
            template = pages/day.html.tmpl    
        [[[week]]]
            template = pages/week.html.tmpl
        [[[month]]]
            template = pages/month.html.tmpl       
        [[[year]]]
            template = pages/year.html.tmpl                 
        [[[yesterday]]]
            template = pages/yesterday.html.tmpl
        [[[last24hours]]]
            template = pages/last24hours.html.tmpl        
        [[[last7days]]]
            template = pages/last7days.html.tmpl        
        [[[last31days]]]
            template = pages/last31days.html.tmpl        
        [[[last366days]]]
            template = pages/last366days.html.tmpl 
        [[[yeartoyear]]]
            template = pages/yeartoyear.html.tmpl
        [[[multiyear]]]
            template = pages/multiyear.html.tmpl                          
        [[[archive-month]]]
            summarize_by = SummaryByMonth
            template = pages/%Y-%m.html.tmpl             
        [[[archive-year]]]
            summarize_by = SummaryByYear
            template = pages/%Y.html.tmpl     
        [[[about]]]
            template = pages/about.html.tmpl            
        # generate main page last   
        [[[index]]]
            template = index.html.tmpl
    
# File copy configuration
# -----------------------------------------------------------------------------
#
# This section describes all files which should be copied
#
[CopyGenerator]

    # List of files to be copied only the first time
    copy_once = icon/*
    # List of files to be copied each run (except templates)
    # copy_always =


# Generator configuration
# -----------------------------------------------------------------------------
#
# This section describes all generators mentioned above
#
[Generators]
    generator_list = weewx.cheetahgenerator.CheetahGenerator, weewx.reportengine.CopyGenerator
